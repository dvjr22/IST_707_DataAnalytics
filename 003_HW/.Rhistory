length(rules02) #1,110
length(rules02) #1,434
summary(rules02)
rules02 = sort(rules02, by="confidence", decreasing=TRUE)
inspect(rules02[1:10])
rules02 = sort(rules02, by="lift", decreasing=TRUE)
inspect(rules02[1:10])
rules02 = sort(rules02, by="support", decreasing=TRUE)
inspect(rules02[1:10])
rules01 = sort(rules01, by="count", decreasing=TRUE)
inspect(rules01[1:10])
rules01 = sort(rules01, by=list("count", "confidence"), decreasing=TRUE)
inspect(rules01[1:10])
rules01 = sort(rules01, by="confidence", decreasing=TRUE)
inspect(rules01[1:10])
rules01T = sort(rules01, by=list("lift", "confidence", "support"), decreasing=TRUE)
inspect(rules01T[1:10])
# top 5 rules by lift
rules01 = sort(rules01, by="lift", decreasing=TRUE)
inspect(rules01[1:10])
rules01T = sort(rules01, by=list("lift", "confidence", "support"), decreasing=TRUE)
inspect(rules01T[1:10])
rules01T = sort(rules01, by=list("lift", "support", "confidence"), decreasing=TRUE)
inspect(rules01T[1:10])
?sort
# top 5 rules by lift
rules01 = sort(rules01, by="lift", decreasing=TRUE)
inspect(rules01[1:10])
rules01 = sort(rules01, by=c("lift", "support", "confidence"), decreasing=TRUE)
inspect(rules01[1:10])
inspect(rules01[1:10])
rules01 = sort(rules01, by="confidence", decreasing=TRUE)
#library(reshape)
library(gridExtra)
library(grid)
library(ggplot2)
#library(lattice)
library(arules)
library(arulesViz)
library(datasets)
rules01 = sort(rules01, by="confidence", decreasing=TRUE)
inspect(rules01[1:10])
inspect(rules01)
rules02 = sort(rules02, by="confidence", decreasing=TRUE)
inspect(rules02[1:10])
rules02 = sort(rules02, by="lift", decreasing=TRUE)
inspect(rules02[1:10])
inspect(rules01)
inspect(rules01)
ggplot(bank_data_rules, aes(sex)) + geom_bar(aes(fill = region)) # equal sex count
ggplot(bank_data_rules, aes(sex)) + geom_bar(aes(fill = current_act)) # equal sex count
ggplot(bank_data_rules[bank_data_rules$region == 'INNER_CITY'], aes(sex)) + geom_bar(aes(fill = current_act)) # equal sex count
ggplot(bank_data_rules[bank_data_rules$region == 'INNER_CITY',], aes(sex)) + geom_bar(aes(fill = current_act)) # equal sex count
ggplot(bank_data_rules, aes(region)) + geom_bar(aes(fill = current_act)) # equal sex count
ggplot(bank_data_rules[bank_data_rules$sex=='FEMALE',], aes(region)) + geom_bar(aes(fill = current_act)) # equal sex count
ggplot(bank_data_rules, aes(age, children)) + geom_point(aes(color = save_act, shape = pep))
bank_data_rules
ggplot(bank_data_rules, aes(ageF, children)) + geom_point(aes(color = save_act, shape = pep))
ggplot(bank_data, aes(age, children)) + geom_point(aes(color = save_act, shape = pep))
ggplot(bank_data, aes(age, children)) + geom_bar(aes(color = save_act, shape = pep))
ggplot(bank_data, aes(age)) + geom_bar(aes(color = save_act, shape = pep))
ggplot(bank_data_rules, aes(ageF)) + geom_bar(aes(color = save_act, shape = pep))
ggplot(bank_data_rules, aes(ageF)) + geom_bar(aes(color = save_act))
ggplot(bank_data_rules, aes(ageF)) + geom_bar(aes(fill = save_act))
ggplot(bank_data_rules, aes(save_act)) + geom_bar(aes(fill = ageF))
ggplot(bank_data_rules, aes(ageF)) + geom_bar(aes(fill = save_act, color = pep))
ggplot(bank_data_rules, aes(ageF)) + geom_bar(aes(fill = save_act, sie = pep))
ggplot(bank_data_rules, aes(ageF)) + geom_bar(aes(fill = save_act, szie = pep))
ggplot(bank_data_rules, aes(ageF)) + geom_bar(aes(fill = save_act, size = pep))
ggplot(bank_data_rules[bank_data_rules$sex=='FEMALE',], aes(region)) + geom_bar(aes(fill = current_act)) # equal sex count
ggplot(bank_data, aes(factor(children))) +  geom_bar(fill = pep)
bank_data
ggplot(bank_data, aes(factor(children))) +  geom_bar(fill = bank_daata$pep)
ggplot(bank_data, aes(factor(children))) +  geom_bar(fill = bank_data$pep)
ggplot(bank_data, aes(pep))) +  geom_bar(fill = childre)
ggplot(bank_data, aes(pep)) +  geom_bar(fill = children)
bank_data
ggplot(bank_data, aes(pep)) +  geom_bar(aes(fill = children))
ggplot(bank_data, aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data, aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' && bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data, aes(children)) +  geom_bar(aes(fill = pep))
# =============================================================================================================
# {children=1} => {pep=YES}                             0.1833333     0.8148148     1.784266    110
# {married=YES,children=0,save_act=YES} => {pep=NO}     0.1783333     0.8991597     1.654895    107
ggplot(bank_data, aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & children > 0,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$children > 0,], aes(ageF) ) + geom_bar(aes(fill = pep))
as.integer(bank_data$children)
bank_data$childrenInt=as.integer(bank_data$children)
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt > 0,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt = 1,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 1,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt > 0,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 2,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 3,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 4,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 1,], aes(ageF) ) + geom_bar(aes(fill = pep))
# {children=1,save_act=YES,ageF=fourties} => {pep=YES}  0.04333333    1             2.189781    26
# {married=YES,children=1,incomeF=TWENTY K}=> {pep=YES} 0.04666667    1             2.189781    28
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt > 0,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$childrenInt > 0,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$childrenInt == 1,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$childrenInt == 1,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$childrenInt == 1 & bank_data$save_act=='YES',], aes(ageF) ) + geom_bar(aes(fill = pep))
# {married=YES,children=1,incomeF=TWENTY K}=> {pep=YES} 0.04666667    1             2.189781    28
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt > 0,], aes(ageF) ) + geom_bar(aes(fill = pep))
bank_data
# {married=YES,children=1,incomeF=TWENTY K}=> {pep=YES} 0.04666667    1             2.189781    28
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt > 0,], aes(i)ncomeF ) + geom_bar(aes(fill = pep))
# {married=YES,children=1,incomeF=TWENTY K}=> {pep=YES} 0.04666667    1             2.189781    28
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt > 0,], aes(incomeF) ) + geom_bar(aes(fill = pep))
# {married=YES,children=1,incomeF=TWENTY K}=> {pep=YES} 0.04666667    1             2.189781    28
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 1,], aes(incomeF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 1,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 2,], aes(ageF) ) + geom_bar(aes(fill = pep))
# leads to...
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 2,], aes(ageF) ) + geom_bar(aes(fill = pep, color = incomeF))
# leads to...
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 2,], aes(ageF) ) + geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 2,], aes(ageF) ) + geom_bar(aes(fill = incomeF))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 2 & bank_data$pep='YES',], aes(ageF) ) + geom_bar(aes(fill = incomeF))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt == 2 & bank_data$pep=='YES',], aes(ageF) ) + geom_bar(aes(fill = incomeF))
plot(rules02[1:10], method='graph', engine = 'interactive', shading = 'confidence')
#library(reshape)
library(gridExtra)
library(grid)
library(ggplot2)
#library(lattice)
library(arules)
library(arulesViz)
library(datasets)
plot(rules02[1:10], method='graph', engine = 'interactive', shading = 'confidence')
inspect(rules02[1:10])
plot(rules02[1], method='graph', engine = 'interactive', shading = 'confidence')
plot(rules02[1], method='matrix', engine = 'interactive', shading = 'confidence')
plot(rules02[1:10], method='matrix', engine = 'interactive', shading = 'confidence')
plot(rules02[1:10], method='graph', engine = 'interactive', shading = 'confidence')
plot(rules02[1:10], method='graph', engine = 'interactive', shading = 'confidence')
plot(rules02[1:10], method='scatterplot', engine = 'interactive', shading = 'confidence')
plot(rules02, method='scatterplot', engine = 'interactive', shading = 'confidence')
plot(rules01, method='scatterplot', engine = 'interactive', shading = 'confidence')
plot(rules02, method='scatterplot', engine = 'interactive', shading = 'confidence')
rules02 = sort(rules02, by="confidence", decreasing=TRUE)
inspect(rules02[1:10])
rules02 = sort(rules02, by="lift", decreasing=TRUE)
inspect(rules02[1:10])
# top 5 rules by confidence
options(digits=2)
rules01 = sort(rules01, by="confidence", decreasing=TRUE)
inspect(rules01)
plot(rules01, method='scatterplot', engine = 'interactive', shading = 'confidence')
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.01, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
summary(rules02)
rules02 = sort(rules02, by="confidence", decreasing=TRUE)
inspect(rules02[1:10])
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.01, conf = 1),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
summary(rules02)
rules02 = sort(rules02, by="confidence", decreasing=TRUE)
inspect(rules02[1:10])
plot(rules02, method='scatterplot', engine = 'interactive', shading = 'confidence')
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.01, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
summary(rules02)
plot(rules01, method='scatterplot', engine = 'interactive', shading = 'confidence')
plot(rules01, method='scatterplot', engine = 'interactive', shading = 'confidence', size = 2)
plot(rules01, method='matrix', engine = 'htmlwidget', shading = 'confidence')
plot(rules02, method='matrix', engine = 'htmlwidget', shading = 'confidence')
plot(rules02[1:1000], method='matrix', engine = 'htmlwidget', shading = 'confidence')
plot(rules01, method='scatterplot', engine = 'interactive', shading = 'lift')
plot(rules02, method='scatterplot', engine = 'interactive', shading = 'lift')
plot(rules02, method='scatterplot', engine = 'interactive', shading = 'support')
plot(rules01, method='scatterplot', engine = 'interactive', shading = 'support')
plot(rules01, method='scatterplot', engine = 'interactive', shading = 'lift')
plot(rules02, method='scatterplot', engine = 'interactive', shading = 'lift')
plot(rules02, method='scatterplot', engine = 'interactive', shading = 'lift')
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.01, conf = 1),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
summary(rules02)
rules02 = sort(rules02, by="confidence", decreasing=TRUE)
inspect(rules02[1:10])
rules02 = sort(rules02, by="lift", decreasing=TRUE)
inspect(rules02[1:10])
rules02 = sort(rules02, by="support", decreasing=TRUE)
inspect(rules02[1:10])
plot(rules02, method='scatterplot', engine = 'interactive', shading = 'lift')
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.01, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
summary(rules02)
rules02 = sort(rules02, by="confidence", decreasing=TRUE)
inspect(rules02[1:10])
rules02 = sort(rules02, by="lift", decreasing=TRUE)
inspect(rules02[1:10])
rules02 = sort(rules02, by="support", decreasing=TRUE)
inspect(rules02[1:10])
plot(rules02, method='scatterplot', engine = 'interactive', shading = 'lift')
plot(rules01, method='scatterplot', engine = 'interactive', shading = 'lift')
rules01 = apriori(bank_data_rules, parameter = list(supp = 0.001, conf = 0.8))
length(rules01)
rules01 = apriori(bank_data_rules, parameter = list(supp = 0.001, conf = 1))
length(rules01)
rules01 = apriori(bank_data_rules, parameter = list(supp = 0.1, conf = 1))
length(rules01)
rules01 = apriori(bank_data_rules, parameter = list(supp = 0.01, conf = 1))
length(rules01)
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.1, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.01, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.09, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.02, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.03, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.04, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.05, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
summary(rules02)
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.04, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.04, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
summary(rules02)
length(rules02) #1,434
plot(rules02, method='scatterplot', engine = 'interactive', shading = 'lift')
inspect(rules01)
length(rules01) # 19
# Get the rules
rules01 = apriori(bank_data_rules, parameter = list(supp = 0.15, conf = 0.8))
length(rules01) # 19
# top 5 rules by confidence
options(digits=2)
rules01 = sort(rules01, by="confidence", decreasing=TRUE)
# top 5 rules by lift
rules01 = sort(rules01, by="lift", decreasing=TRUE)
inspect(rules01)
ggplot(bank_data[bank_data$car=='NO' & bank_data$mortgage=='NO',], aes(incomeF)) + geom_bar()
ggplot(bank_data[bank_data$car=='NO' & bank_data$mortgage=='NO',], aes(incomeF)) + geom_bar(aes(fill=save_act))
# =============================================================================================================
# {children=1} => {pep=YES}                             0.1833333     0.8148148     1.784266    110
# {married=YES,children=0,save_act=YES} => {pep=NO}     0.1783333     0.8991597     1.654895    107
ggplot(bank_data, aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data, aes(children)) + geom_bar(aes(fill=pep))
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
ggplot(bank_data, aes(children)) + geom_bar(aes(fill=pep))
ggplot(bank_data, aes(children)) + geom_bar(aes(fill=pep))
ggplot(bank_data, aes(pep)) + geom_bar(aes(fill=children))
# set pep to rhs
rules02 = apriori(data = bank_data_rules, parameter=list(supp=0.04, conf = .9),
appearance = list(default="lhs",rhs="pep=YES"),
control = list(verbose=FALSE, sort=TRUE))
length(rules02) #1,434
summary(rules02)
rules02 = sort(rules02, by="lift", decreasing=TRUE)
inspect(rules02)
# these are target customers
#{married=YES,children=1,save_act=YES,current_act=YES}             => {pep=YES} 0.073   0.92       2.0  44
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt==1,], aes(region)) +  geom_bar(aes(fill = pep))
# these are target customers
#{married=YES,children=1,save_act=YES,current_act=YES}             => {pep=YES} 0.073   0.92       2.0  44
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt==1,], aes(incomeF)) +  geom_bar(aes(fill = pep))
# children are a factor in pep, but so is income
#{children=1,incomeF=THIRTY K}                                     => {pep=YES} 0.043   0.96       2.1  26
#{children=1,incomeF=TWENTY K}                                     => {pep=YES} 0.062   0.95       2.1  37
ggplot(bank_data[bank_data$childrenInt==1,], aes(incomeF)) +  geom_bar(aes(fill = pep))
# these are target customers
#{married=YES,children=1,save_act=YES,current_act=YES}             => {pep=YES} 0.073   0.92       2.0  44
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt==1,], aes(pep)) +  geom_bar(aes(fill = pep))
# these are target customers
#{married=YES,children=1,save_act=YES,current_act=YES}             => {pep=YES} 0.073   0.92       2.0  44
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt==1,], aes(children)) +  geom_bar(aes(fill = pep))
View(bank_data)
# these are target customers
#{married=YES,children=1,save_act=YES,current_act=YES}             => {pep=YES} 0.073   0.92       2.0  44
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES' & bank_data$childrenInt==1,], aes(ageF)) +  geom_bar(aes(fill = pep))
# These are future potential pep customers
#{married=YES,children=0,save_act=YES}             => {pep=NO}          0.18    0.90       1.7  107
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
# customers with 1 kid more likely to have a pep
#{children=1}                                      => {pep=YES}         0.18    0.81       1.8  110
ggplot(bank_data, aes(pep)) + geom_bar(aes(fill=children))
# children are a factor in pep, but so is income
#{children=1,incomeF=THIRTY K}                                     => {pep=YES} 0.043   0.96       2.1  26
#{children=1,incomeF=TWENTY K}                                     => {pep=YES} 0.062   0.95       2.1  37
ggplot(bank_data[bank_data$childrenInt==1,], aes(incomeF)) +  geom_bar(aes(fill = pep))
# customers with 1 kid more likely to have a pep
#{children=1}                                      => {pep=YES}         0.18    0.81       1.8  110
ggplot(bank_data, aes(pep)) + geom_bar(aes(fill=children))
# customers with 1 kid more likely to have a pep
#{children=1}                                      => {pep=YES}         0.18    0.81       1.8  110
kidPlot = ggplot(bank_data, aes(pep)) + geom_bar(aes(fill=children))
# children are a factor in pep, but so is income
#{children=1,incomeF=THIRTY K}                                     => {pep=YES} 0.043   0.96       2.1  26
#{children=1,incomeF=TWENTY K}                                     => {pep=YES} 0.062   0.95       2.1  37
incomePlot = ggplot(bank_data[bank_data$childrenInt==1,], aes(incomeF)) +  geom_bar(aes(fill = pep)) +ggtitle("")
grid.arrange(kidPlot, incomePlot)
grid.arrange(kidPlot, incomePlot, ncol=2)
# these are target customers
#{married=YES,children=1,save_act=YES,current_act=YES}             => {pep=YES} 0.073   0.92       2.0  44
# These are future potential pep customers
#{married=YES,children=0,save_act=YES}             => {pep=NO}          0.18    0.90       1.7  107
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
# these are target customers
#{married=YES,children=1,save_act=YES,current_act=YES}             => {pep=YES} 0.073   0.92       2.0  44
# These are future potential pep customers
#{married=YES,children=0,save_act=YES}             => {pep=NO}          0.18    0.90       1.7  107
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
#{car=NO,save_act=YES,mortgage=NO}                 => {current_act=YES} 0.17    0.81       1.1  104
ggplot(bank_data[bank_data$car=='NO' & bank_data$mortgage=='NO',], aes(incomeF)) + geom_bar(aes(fill=save_act))
# children are a factor in pep, but so is income
#{children=1,incomeF=THIRTY K}                                     => {pep=YES} 0.043   0.96       2.1  26
#{children=1,incomeF=TWENTY K}                                     => {pep=YES} 0.062   0.95       2.1  37
incomePlot = ggplot(bank_data[bank_data$childrenInt==1,], aes(incomeF)) +  geom_bar(aes(fill = pep)) +ggtitle("")
bank_data[bank_data$childrenInt==1,]
# children are a factor in pep, but so is income
#{children=1,incomeF=THIRTY K}                                     => {pep=YES} 0.043   0.96       2.1  26
#{children=1,incomeF=TWENTY K}                                     => {pep=YES} 0.062   0.95       2.1  37
incomePlot = ggplot(bank_data[bank_data$children==1,], aes(incomeF)) +  geom_bar(aes(fill = pep)) +ggtitle("")
bank_data[bank_data$children==1,]
# children are a factor in pep, but so is income
#{children=1,incomeF=THIRTY K}                                     => {pep=YES} 0.043   0.96       2.1  26
#{children=1,incomeF=TWENTY K}                                     => {pep=YES} 0.062   0.95       2.1  37
incomePlot = ggplot(bank_data[bank_data$children==1,], aes(incomeF)) +  geom_bar(aes(fill = pep)) +ggtitle("")
incomePlot
grid.arrange(kidPlot, incomePlot, ncol=2)
grid.arrange(regionsPlot, incomeRegionsPlot, ncol = 2)
#library(reshape)
library(gridExtra)
library(grid)
library(ggplot2)
#library(lattice)
library(arules)
library(arulesViz)
library(datasets)
grid.arrange(regionsPlot, incomeRegionsPlot, ncol = 2)
grid.arrange(sexPlot, incomeSexPlot)
regionsPlot = ggplot(bank_data, aes(region)) + geom_bar(aes(fill = sex))+ scale_fill_manual( values = c('red', 'blue')) # 4 regions
#incomeRegionsPlot = ggplot(bank_data, aes(region, income, fill = region)) + geom_boxplot() # income by region
incomeRegionsPlot = ggplot(bank_data, aes(incomeF)) + geom_bar(aes(fill = region))
grid.arrange(regionsPlot, incomeRegionsPlot, ncol = 2)
regionsPlot = ggplot(bank_data, aes(region)) + geom_bar(aes(fill = sex))+ scale_fill_manual( values = c('red', 'blue')) + ggtitle("Gender by Region") # 4 regions
#incomeRegionsPlot = ggplot(bank_data, aes(region, income, fill = region)) + geom_boxplot() # income by region
incomeRegionsPlot = ggplot(bank_data, aes(incomeF)) + geom_bar(aes(fill = region)) + ggtitle("Income by Region")
grid.arrange(regionsPlot, incomeRegionsPlot, ncol = 2)
incomeSexPlot
incomeSexPlot = ggplot(bank_data, aes(sex, income, fill = region)) + geom_boxplot() + ggtitle("Income by Sex/Region")  # income by sex
incomeSexPlot
childrenPlot = ggplot(bank_data[bank_data$married=='YES',], aes(children)) + geom_bar(aes(fill = region)) + ggtitle("Married with Childre")
childrenPlot
marriedPlot = ggplot(bank_data, aes(married)) + geom_bar(aes(fill = sex)) + scale_fill_manual( values = c('red', 'blue')) + ggtitle("Married by Gender")# more are married
marriedPlot01 = ggplot(bank_data, aes(married)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ggtitle("Married by Region")# more are married
childrenPlot = ggplot(bank_data[bank_data$married=='YES',], aes(children)) + geom_bar(aes(fill = region)) + ggtitle("Married with Childre")
grid.arrange(marriedPlot, marriedPlot01, childrenPlot, ncol = 3)
childrenPlot = ggplot(bank_data[bank_data$married=='YES',], aes(children)) + geom_bar(aes(fill = region)) + ggtitle("Married w/ Childre")
grid.arrange(marriedPlot, marriedPlot01, childrenPlot, ncol = 3)
marriedPlot = ggplot(bank_data, aes(married)) + geom_bar(aes(fill = sex)) + scale_fill_manual( values = c('red', 'blue')) + ggtitle("Married by Gender")# more are married
marriedPlot01 = ggplot(bank_data, aes(married)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ggtitle("Married by Region")# more are married
childrenPlot = ggplot(bank_data[bank_data$married=='YES',], aes(children)) + geom_bar(aes(fill = region)) + ggtitle("Married with Children")
grid.arrange(marriedPlot, marriedPlot01, childrenPlot, ncol = 3)
currentPlot = ggplot(bank_data, aes(current_act)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("Current Account by Region")
mortagePlot = ggplot(bank_data, aes(mortgage)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("Mortgages")
pepPlot = ggplot(bank_data, aes(pep)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("PEP")
savePlot = ggplot(bank_data, aes(save_act)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("Savings Accounts")
currentPlot = ggplot(bank_data, aes(current_act)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("Current Accounts")
mortagePlot = ggplot(bank_data, aes(mortgage)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("Mortgages")
pepPlot = ggplot(bank_data, aes(pep)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("PEP")
legend = getLegend(pepPlot)
grid.arrange(savePlot, currentPlot, mortagePlot, pepPlot, legend, ncol=5)
# =============================================================================================================
# get the legend from a ggplot
#
getLegend = function(gplot){
tmp = ggplot_gtable(ggplot_build(gplot))
leg = which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
return(tmp$grobs[[leg]])
}
legend = getLegend(pepPlot)
grid.arrange(savePlot, currentPlot, mortagePlot, pepPlot, legend, ncol=5)
savePlot = ggplot(bank_data, aes(save_act)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("Savings Accounts")
currentPlot = ggplot(bank_data, aes(current_act)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("Current Accounts")
mortagePlot = ggplot(bank_data, aes(mortgage)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("Mortgages")
pepPlot = ggplot(bank_data, aes(pep)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("PEP")
# =============================================================================================================
# get the legend from a ggplot
#
getLegend = function(gplot){
tmp = ggplot_gtable(ggplot_build(gplot))
leg = which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
return(tmp$grobs[[leg]])
}
legend = getLegend(pepPlot)
grid.arrange(savePlot, currentPlot, mortagePlot, pepPlot, legend, ncol=5)
savePlot = ggplot(bank_data, aes(save_act)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("Savings Accounts")
currentPlot = ggplot(bank_data, aes(current_act)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("Current Accounts")
mortagePlot = ggplot(bank_data, aes(mortgage)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("Mortgages")
pepPlot = ggplot(bank_data, aes(pep)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("PEP")
grid.arrange(savePlot, currentPlot, mortagePlot, pepPlot, legend, ncol=5)
legend = getLegend(pepPlot)
legend
grid.arrange(savePlot, currentPlot, mortagePlot, pepPlot, legend, ncol=5)
pepPlot = ggplot(bank_data, aes(pep)) + geom_bar(aes(fill = region)) + theme(legend.position = "none") + ylim(0,500) + ggtitle("PEP")
legend = getLegend(pepPlot)
# =============================================================================================================
# get the legend from a ggplot
#
gplot = pepPlot
tmp = ggplot_gtable(ggplot_build(gplot))
leg = which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
View(tmp)
pepPlot = ggplot(bank_data, aes(pep)) + geom_bar(aes(fill = region))  + ylim(0,500) + ggtitle("PEP")
legend = getLegend(pepPlot)
grid.arrange(savePlot, currentPlot, mortagePlot, pepPlot, legend, ncol=5)
pepPlot = ggplot(bank_data, aes(pep)) + geom_bar(aes(fill = region))  + ylim(0,500) + ggtitle("PEP")
legend = getLegend(pepPlot)
pepPlot + theme(legend.position = "none")
pepPlot = pepPlot+ theme(legend.position = "none")
grid.arrange(savePlot, currentPlot, mortagePlot, pepPlot, legend, ncol=5)
#colorPalette = c("FEMALE" = "red", "MALE" = "blue")
xy_plot01 = ggplot(bank_data, aes(age, income)) + geom_point(aes(color = region, shape = pep, size = 1)) + scale_fill_manual( values = c('red', 'blue'))
xy_plot02 = ggplot(bank_data, aes(age, income)) + geom_point(aes(color = region , shape = pep )) + scale_fill_manual( values = c('yellow', 'green'))
grid.arrange(xy_plot01, xy_plot02)
ggplot(bank_data, aes(incomeF)) + geom_bar(aes(fill = region))
xy_plot01
#colorPalette = c("FEMALE" = "red", "MALE" = "blue")
xy_plot01 = ggplot(bank_data, aes(age, income)) + geom_point(aes(color = region, shape = pep, size = 1)) + scale_fill_manual( values = c('red', 'blue')) + ggtitle("Income vs Age")
xy_plot01
# customers with 1 kid more likely to have a pep
#{children=1}                                      => {pep=YES}         0.18    0.81       1.8  110
kidPlot = ggplot(bank_data, aes(pep)) + geom_bar(aes(fill=children))
kidPlot
# children are a factor in pep, but so is income
#{children=1,incomeF=THIRTY K}                                     => {pep=YES} 0.043   0.96       2.1  26
#{children=1,incomeF=TWENTY K}                                     => {pep=YES} 0.062   0.95       2.1  37
incomePlot = ggplot(bank_data[bank_data$children==1,], aes(incomeF)) +  geom_bar(aes(fill = pep)) +ggtitle("")
grid.arrange(kidPlot, incomePlot, ncol=2)
# customers with 1 kid more likely to have a pep
#{children=1}                                      => {pep=YES}         0.18    0.81       1.8  110
kidPlot = ggplot(bank_data, aes(pep)) + geom_bar(aes(fill=children)) + ggtitle("PEP Accounts with Children")
# children are a factor in pep, but so is income
#{children=1,incomeF=THIRTY K}                                     => {pep=YES} 0.043   0.96       2.1  26
#{children=1,incomeF=TWENTY K}                                     => {pep=YES} 0.062   0.95       2.1  37
incomePlot = ggplot(bank_data[bank_data$children==1,], aes(incomeF)) +  geom_bar(aes(fill = pep)) +ggtitle("PEP Accounts by Age with 1 Child")
grid.arrange(kidPlot, incomePlot, ncol=2)
# these are target customers
#{married=YES,children=1,save_act=YES,current_act=YES}             => {pep=YES} 0.073   0.92       2.0  44
# These are future potential pep customers
#{married=YES,children=0,save_act=YES}             => {pep=NO}          0.18    0.90       1.7  107
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep))
#{car=NO,save_act=YES,mortgage=NO}                 => {current_act=YES} 0.17    0.81       1.1  104
ggplot(bank_data[bank_data$car=='NO' & bank_data$mortgage=='NO',], aes(incomeF)) + geom_bar(aes(fill=save_act))
# these are target customers
#{married=YES,children=1,save_act=YES,current_act=YES}             => {pep=YES} 0.073   0.92       2.0  44
# These are future potential pep customers
#{married=YES,children=0,save_act=YES}             => {pep=NO}          0.18    0.90       1.7  107
ggplot(bank_data[bank_data$married=='YES' & bank_data$save_act=='YES',], aes(children)) +  geom_bar(aes(fill = pep)) + ggtitle("Current Customers with Children")
#{car=NO,save_act=YES,mortgage=NO}                 => {current_act=YES} 0.17    0.81       1.1  104
ggplot(bank_data[bank_data$car=='NO' & bank_data$mortgage=='NO',], aes(incomeF)) + geom_bar(aes(fill=save_act))+ggtitle("Customers for Future Products")
